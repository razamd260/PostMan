{
	"info": {
		"_postman_id": "73a8778d-de3a-4405-97d3-69af5c28fe6a",
		"name": "CRUD_Operation",
		"schema": "https://schema.getpostman.com/json/collection/v2.0.0/collection.json"
	},
	"item": [
		{
			"name": "My_First",
			"item": [
				{
					"name": "POST_Method",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "6b378ce7-563a-4dff-b11b-6f101537c8d4",
								"exec": [
									"\r",
									"pm.test(\"Response status code is 201\", function () {\r",
									"  pm.expect(pm.response.code).to.equal(201);\r",
									"});\r",
									"\r",
									"\r",
									"pm.test(\"Response has the required fields - name, job, id, and createdAt\", function () {\r",
									"    const responseData = pm.response.json();\r",
									"    \r",
									"    pm.expect(responseData).to.be.an('object');\r",
									"    pm.expect(responseData).to.have.property('name');\r",
									"    pm.expect(responseData).to.have.property('job');\r",
									"    pm.expect(responseData).to.have.property('id');\r",
									"    pm.expect(responseData).to.have.property('createdAt');\r",
									"});\r",
									"\r",
									"\r",
									"pm.test(\"Name and job fields are non-empty strings\", function () {\r",
									"    const responseData = pm.response.json();\r",
									"    \r",
									"    pm.expect(responseData.name).to.be.a('string').and.to.have.lengthOf.at.least(1, \"Name should not be empty\");\r",
									"    pm.expect(responseData.job).to.be.a('string').and.to.have.lengthOf.at.least(1, \"Job should not be empty\");\r",
									"});\r",
									"\r",
									"\r",
									"pm.test(\"Id is a non-empty string\", function () {\r",
									"    const responseData = pm.response.json();\r",
									"    \r",
									"    pm.expect(responseData).to.be.an('object');\r",
									"    pm.expect(responseData.id).to.be.a('string').and.to.have.lengthOf.at.least(1, \"Id should not be empty\");\r",
									"});\r",
									"\r",
									"\r",
									"pm.test(\"CreatedAt is in a valid date format\", function () {\r",
									"    const responseData = pm.response.json();\r",
									"    \r",
									"    pm.expect(responseData).to.be.an('object');\r",
									"    pm.expect(responseData.createdAt).to.match(/^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}.\\d{3}Z$/, \"CreatedAt should be in valid date format\");\r",
									"});\r",
									"\r",
									"var template = `\r",
									"<style type=\"text/css\">\r",
									"    .tftable {font-size:14px;color:#333333;width:100%;border-width: 1px;border-color: #87ceeb;border-collapse: collapse;}\r",
									"    .tftable th {font-size:18px;background-color:#87ceeb;border-width: 1px;padding: 8px;border-style: solid;border-color: #87ceeb;text-align:left;}\r",
									"    .tftable tr {background-color:#ffffff;}\r",
									"    .tftable td {font-size:14px;border-width: 1px;padding: 8px;border-style: solid;border-color: #87ceeb;}\r",
									"    .tftable tr:hover {background-color:#e0ffff;}\r",
									"</style>\r",
									"\r",
									"<table class=\"tftable\" border=\"1\">\r",
									"    <tr>\r",
									"        <th>Name</th>\r",
									"        <th>Job</th>\r",
									"        <th>ID</th>\r",
									"        <th>Created At</th>\r",
									"    </tr>\r",
									"    <tr>\r",
									"        <td>{{response.name}}</td>\r",
									"        <td>{{response.job}}</td>\r",
									"        <td>{{response.id}}</td>\r",
									"        <td>{{response.createdAt}}</td>\r",
									"    </tr>\r",
									"</table>\r",
									"`;\r",
									"\r",
									"function constructVisualizerPayload() {\r",
									"    return { response: pm.response.json() }\r",
									"}\r",
									"\r",
									"pm.visualizer.set(template, constructVisualizerPayload());"
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "e5982fe0-01ed-4ae2-8fc8-968098b8afdf",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\"  :  \"{{$randomFirstName}}\",\r\n    \"job\"   :  \"{{$randomJobTitle}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "https://reqres.in/api/users",
						"description": "This endpoint makes an HTTP POST request to create a new user on the server. The request should include a JSON payload in the raw request body type with the keys \"name\" and \"job\". The response will have a status code of 201 and will include the newly created user's details with keys \"name\", \"job\", \"id\", and \"createdAt\"."
					},
					"response": [
						{
							"id": "a116d271-4a47-4848-997c-24e091e6b093",
							"name": "POST_Method",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"name\"  :  \"{{$randomFirstName}}\",\r\n    \"job\"   :  \"{{$randomJobTitle}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "https://reqres.in/api/users"
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Sat, 20 Jan 2024 20:34:19 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "105"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Report-To",
									"value": "{\"group\":\"heroku-nel\",\"max_age\":3600,\"endpoints\":[{\"url\":\"https://nel.heroku.com/reports?ts=1705782859&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=fS%2BqLxHIIKkSDx5vTcJlB%2BBNrPFPwSh7b%2Bc0SsIxsR8%3D\"}]}"
								},
								{
									"key": "Reporting-Endpoints",
									"value": "heroku-nel=https://nel.heroku.com/reports?ts=1705782859&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=fS%2BqLxHIIKkSDx5vTcJlB%2BBNrPFPwSh7b%2Bc0SsIxsR8%3D"
								},
								{
									"key": "Nel",
									"value": "{\"report_to\":\"heroku-nel\",\"max_age\":3600,\"success_fraction\":0.005,\"failure_fraction\":0.05,\"response_headers\":[\"Via\"]}"
								},
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "Etag",
									"value": "W/\"69-xhOQbAz34Vn46S4RFQ7+aM1LYGs\""
								},
								{
									"key": "Via",
									"value": "1.1 vegur"
								},
								{
									"key": "CF-Cache-Status",
									"value": "DYNAMIC"
								},
								{
									"key": "Server",
									"value": "cloudflare"
								},
								{
									"key": "CF-RAY",
									"value": "848a18f718db937f-MAA"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n    \"name\": \"Beverly\",\n    \"job\": \"Corporate Marketing Designer\",\n    \"id\": \"373\",\n    \"createdAt\": \"2024-01-20T20:34:19.601Z\"\n}"
						}
					]
				},
				{
					"name": "GET_Method",
					"id": "b10b6787-aed6-4a79-9e02-3b0563f61152",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://reqres.in/api/users?page=2",
							"protocol": "https",
							"host": [
								"reqres",
								"in"
							],
							"path": [
								"api",
								"users"
							],
							"query": [
								{
									"key": "page",
									"value": "2"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "New Request",
					"id": "fdec4efa-7ee2-4159-852b-6f87bb16cca7",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\" :\"{{$randomFirstName}}\",\r\n    \"job\"  : \"{{$randomJobTitle}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "https://reqres.in/api/users/2"
					},
					"response": []
				},
				{
					"name": "PATCH_Method",
					"id": "33479307-a0ee-4ced-b891-ecef52bb51e2",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\"  :  \"{{$randomFirstName}}\",\r\n    \"job\"   :  \"{{$randomJobTitle}}\"\r\n }",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "https://reqres.in/api/users/2"
					},
					"response": []
				}
			],
			"id": "a24c85cb-9249-45c2-8452-fd737e7a7687"
		}
	]
}